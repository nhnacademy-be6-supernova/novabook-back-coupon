#name: Deploy to NHN Cloud
#
#on:
#  push:
#  pull_request:
#    branches:
#      - main
#
#permissions: write-all
#
#jobs:
#  build:
#    name: Build and Deploy
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4.1.7
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4.2.1
#        with:
#          distribution: 'temurin'
#          java-version: 21
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # mvn clean verify 명령어 실행
      #      - name: Build with Maven
      #        run: mvn clean test

      #      - name: Cache SonarQube packages
      #        uses: actions/cache@v4.0.2
      #        with:
      #          path: ~/.sonar/cache
      #          key: ${{ runner.os }}-sonar
      #          restore-keys: ${{ runner.os }}-sonar

      #      - name: Cache Maven packages
      #        uses: actions/cache@v4.0.2
      #        with:
      #          path: ~/.m2
      #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #          restore-keys: ${{ runner.os }}-m2

      #      - name: Build and analyze
      #        env:
      #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=store-novabook-coupon -Dsonar.projectName='store-novabook-coupon'

      #      - name: Build with Maven
      #        run: mvn package --batch-mode

      - name: upload file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "target/*.jar"
          target: "~/"
          rm: false
      - name: execute shell script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script_stop: true
          script: "./startup.sh"